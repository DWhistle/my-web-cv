{"version":3,"sources":["App.js","index.js","components/Utils/LangWrapper.js","lang/texts.js","components/Template/Analytics.js","data/routes.js","components/Template/Hamburger.js","components/Template/Navigation.js","components/Template/SideBar.js","components/Template/ScrollToTop.js","layouts/Main.js","data/contact.js","components/Contact/ContactIcons.js"],"names":["About","lazy","Contact","NotFound","Projects","Resume","Stats","LangSwitcher","App","LangWrapper","basename","process","fallback","Main","exact","path","component","status","StrictApp","StrictMode","rootElement","document","getElementById","hasChildNodes","hydrate","render","lang","TEMPLATES","JS_FILES","POSITIONS","TEXTS_FILES","ABOUT","SITE","SIDEBAR","local","navigator","language","toLocaleLowerCase","RUSSIAN_LOCALE","find","i","arr","Russian","English","AppStateContext","createContext","props","useState","locale","setLocale","messages","setMessages","Provider","value","switchLanguage","getTextTemplate","templateName","loc","template","getJsTemplateName","children","NODE_ENV","REACT_APP_GA_TRACKING_ID","ReactGA","initialize","Analytics","pathname","useLocation","useEffect","set","page","pageview","routes","index","label","Menu","Hamburger","open","setOpen","className","id","onClick","right","isOpen","map","l","to","Navigation","filter","LinkRenderer","SideBar","context","useContext","src","alt","href","source","renderers","Link","escapeHtml","window","location","includes","ScrollToTop","scrollTo","titleTemplate","defaultTitle","title","name","content","description","fullPage","defaultProps","data","link","icon","faGithub","faLinkedinIn","faEnvelope","ContactIcons","s"],"mappings":"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","file":"static/js/main.7238f71a.chunk.js","sourcesContent":["import React, { Suspense, lazy } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Main from \"./layouts/Main\"; // fallback for lazy pages\nimport \"./static/css/main.scss\"; // All of our styles\nimport LangWrapper from \"./components/Utils/LangWrapper\";\n\nconst { PUBLIC_URL } = process.env;\n\n// Every route - we lazy load so that each page can be chunked\n// NOTE that some of these chunks are very small. We should optimize\n// which pages are lazy loaded in the future.\nconst About = lazy(() => import(\"./pages/About\"));\nconst Contact = lazy(() => import(\"./pages/Contact\"));\nconst Index = lazy(() => import(\"./pages/Index\"));\nconst NotFound = lazy(() => import(\"./pages/NotFound\"));\nconst Projects = lazy(() => import(\"./pages/Projects\"));\nconst Resume = lazy(() => import(\"./pages/Resume\"));\nconst Stats = lazy(() => import(\"./pages/Stats\"));\nconst LangSwitcher = lazy(() => import(\"./pages/LangSwitcher\"));\n\nconst App = () => (\n  <LangWrapper>\n    <BrowserRouter basename={PUBLIC_URL}>\n      <Suspense fallback={<Main />}>\n        <Switch>\n          <Route exact path=\"/\" component={About} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/stats\" component={Stats} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/resume\" component={Resume} />\n          <Route path=\"/lang\" component={LangSwitcher} />\n          <Route component={NotFound} status={404} />\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  </LangWrapper>\n);\n\nexport default App;\n","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport App from \"./App\";\n\n// See https://reactjs.org/docs/strict-mode.html\nconst StrictApp = () => (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nconst rootElement = document.getElementById(\"root\");\n\n// hydrate is required by react-snap.\nif (rootElement.hasChildNodes()) {\n  hydrate(<StrictApp />, rootElement);\n} else {\n  render(<StrictApp />, rootElement);\n}\n","import { createContext, useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport English from \"lang/en/meta.json\";\nimport Russian from \"lang/ru-ru/meta.json\";\nimport TEMPLATES from \"lang/texts.js\";\nimport raw from \"raw.macro\";\n\nlet local = navigator.language.toLocaleLowerCase();\nconst RUSSIAN_LOCALES_OPTIONS = [\"ru-ru\", \"ru\"];\nconst RUSSIAN_LOCALE = \"ru-ru\";\nconst ENGLISH_LOCALE = \"en\";\nlet lang;\nif (RUSSIAN_LOCALES_OPTIONS.find((lang, i, arr) => lang === local)) {\n  lang = Russian;\n  local = RUSSIAN_LOCALE;\n} else {\n  lang = English;\n  local = ENGLISH_LOCALE;\n}\nexport const AppStateContext = createContext(null);\n\nconst LangWrapper = (props) => {\n  const [locale, setLocale] = useState(local);\n  const [messages, setMessages] = useState(lang);\n\n  function switchLanguage() {\n    if (locale === RUSSIAN_LOCALE) {\n      setLocale(ENGLISH_LOCALE);\n      setMessages(English);\n    } else {\n      setLocale(RUSSIAN_LOCALE);\n      setMessages(Russian);\n    }\n  }\n\n  function getTextTemplate(templateName) {\n    const loc = locale || \"en\";\n    const template = TEMPLATES.TEXTS_FILES[templateName] || \"\";\n    return raw(`../../lang/${loc}/${template}`);\n  }\n\n  function getJsTemplateName(templateName) {\n    const loc = locale || \"en\";\n    const template = TEMPLATES.JS_FILES[templateName] || \"\";\n    return `lang/${loc}/${template}`;\n  }\n\n  return (\n    <AppStateContext.Provider\n      value={{ locale, switchLanguage, getTextTemplate, getJsTemplateName }}\n    >\n      <IntlProvider messages={messages} locale={locale}>\n        {props.children}\n      </IntlProvider>\n    </AppStateContext.Provider>\n  );\n};\n\nexport default LangWrapper;\n","const text = {\n  ABOUT: \"about.md\",\n  SITE: \"site.md\",\n  SIDEBAR: \"sidebar.md\",\n};\n\nconst js = {\n  POSITIONS: \"resume/positions\",\n};\n\nconst TEMPLATES = {\n  JS_FILES: js,\n  TEXTS_FILES: text,\n};\n\nexport default TEMPLATES;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\n\nconst { NODE_ENV, REACT_APP_GA_TRACKING_ID } = process.env;\n\nif (NODE_ENV === \"production\") {\n  ReactGA.initialize(REACT_APP_GA_TRACKING_ID);\n}\n\nconst Analytics = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (NODE_ENV === \"production\") {\n      ReactGA.set({\n        page: pathname,\n      });\n      ReactGA.pageview(pathname);\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default Analytics;\n","const routes = [\n  {\n    index: true,\n    label: \"IndexRoute\",\n    path: \"/\",\n  },\n  {\n    label: \"AboutRoute\",\n    path: \"/about\",\n  },\n  {\n    label: \"ResumeRoute\",\n    path: \"/resume\",\n  },\n  // {\n  //   label: 'ProjectsRoute',\n  //   path: '/projects',\n  // },\n  {\n    label: \"ContactRoute\",\n    path: \"/contact\",\n  },\n  {\n    label: \"SwitchLanguageRoute\",\n    path: \"/lang\",\n  },\n];\n\nexport default routes;\n","import React, { Suspense, lazy, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../data/routes\";\n\nconst Menu = lazy(() => import(\"react-burger-menu/lib/menus/slide\"));\n\nconst Hamburger = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"hamburger-container\">\n      <nav className=\"main\" id=\"hambuger-nav\">\n        <ul>\n          {open ? (\n            <li className=\"menu close-menu\">\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">\n                &#10005;\n              </div>\n            </li>\n          ) : (\n            <li className=\"menu open-menu\">\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">\n                &#9776;\n              </div>\n            </li>\n          )}\n        </ul>\n      </nav>\n      <Suspense fallback={<></>}>\n        <Menu right isOpen={open}>\n          <ul className=\"hamburger-ul\">\n            {routes.map((l) => (\n              <li key={l.label}>\n                <Link to={l.path} onClick={() => setOpen(!open)}>\n                  <h3 className={l.index && \"index-li\"}>\n                    <FormattedMessage id={l.label}></FormattedMessage>\n                  </h3>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Menu>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Hamburger from \"./Hamburger\";\nimport routes from \"../../data/routes\";\n\n// Websites Navbar, displays routes defined in 'src/data/routes'\nconst Navigation = () => (\n  <header id=\"header\">\n    <h1 className=\"index-link\">\n      {routes\n        .filter((l) => l.index)\n        .map((l) => (\n          <Link key={l.label} to={l.path}>\n            <FormattedMessage id={l.label}></FormattedMessage>\n          </Link>\n        ))}\n    </h1>\n    <nav className=\"links\">\n      <ul>\n        {routes\n          .filter((l) => !l.index)\n          .map((l) => (\n            <li key={l.label}>\n              <Link to={l.path}>\n                <FormattedMessage id={l.label}></FormattedMessage>\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </nav>\n    <Hamburger />\n  </header>\n);\n\nexport default Navigation;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport ContactIcons from \"../Contact/ContactIcons\";\nimport { FormattedMessage } from \"react-intl\";\nimport { AppStateContext } from \"../Utils/LangWrapper\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst { PUBLIC_URL } = process.env; // set automatically from package.json:homepage\nconst LinkRenderer = ({ ...children }) => <Link {...children} />;\n\nconst SideBar = () => {\n  const context = useContext(AppStateContext);\n  return (\n    <section id=\"sidebar\">\n      <section id=\"intro\">\n        <Link to=\"/\" className=\"logo\">\n          <img src={`${PUBLIC_URL}/images/me.jpg`} alt=\"\" />\n        </Link>\n        <header>\n          <h2>\n            <FormattedMessage id=\"Me\" />\n          </h2>\n          <p>\n            <a href=\"mailto:andrw.shibaev@gmail.com\">andrw.shibaev@gmail.com</a>\n          </p>\n        </header>\n      </section>\n\n      <section className=\"blurb\">\n        <h2>\n          <FormattedMessage id=\"AboutRoute\"></FormattedMessage>\n        </h2>\n        {/* <p>Hi, I&apos;m Michael. I like building things.\n        I am a <a href=\"https://icme.stanford.edu/\">Stanford ICME</a> graduate, YC Alumni, and\n        the co-founder and CTO of <a href=\"https://arthena.com\">Arthena</a>. Before Arthena I was\n        at <a href=\"https://matroid.com\">Matroid</a>\n        , <a href=\"https://planet.com\">Planet</a>\n        , <a href=\"https://planetaryresources.com\">Planetary Resources</a>\n        , <a href=\"https://facebook.com\">Facebook</a>\n        , and <a href=\"https://seds.org\">SEDS</a>.\n      </p> */}\n        <ReactMarkdown\n          source={context.getTextTemplate(\"SIDEBAR\")}\n          renderers={{\n            Link: LinkRenderer,\n          }}\n          escapeHtml={false}\n        />\n        <ul className=\"actions\">\n          <li>\n            {!window.location.pathname.includes(\"/resume\") ? (\n              <Link to=\"/resume\" className=\"button\">\n                <FormattedMessage id=\"ResumeRoute\" />\n              </Link>\n            ) : (\n              <Link to=\"/about\" className=\"button\">\n                <FormattedMessage id=\"AboutRoute\" />\n              </Link>\n            )}\n          </li>\n        </ul>\n      </section>\n    </section>\n  );\n};\n\nexport default SideBar;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nimport Analytics from \"../components/Template/Analytics\";\nimport Navigation from \"../components/Template/Navigation\";\nimport SideBar from \"../components/Template/SideBar\";\nimport ScrollToTop from \"../components/Template/ScrollToTop\";\n\nconst Main = (props) => (\n  <HelmetProvider>\n    <Analytics />\n    <ScrollToTop />\n    <Helmet titleTemplate=\"%s | Andrey Shibaev\" defaultTitle=\"Andrey Shibaev\">\n      {props.title && <title>{props.title}</title>}\n      <meta name=\"description\" content={props.description} />\n    </Helmet>\n    <div id=\"wrapper\">\n      <Navigation />\n      <div id=\"main\">{props.children}</div>\n      {props.fullPage ? null : <SideBar />}\n    </div>\n  </HelmetProvider>\n);\n\nMain.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  fullPage: PropTypes.bool,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nMain.defaultProps = {\n  children: null,\n  fullPage: false,\n  title: null,\n  description: \"Andrey Shibaev's web CV.\",\n};\n\nexport default Main;\n","import { faGithub } from \"@fortawesome/free-brands-svg-icons/faGithub\";\nimport { faLinkedinIn } from \"@fortawesome/free-brands-svg-icons/faLinkedinIn\";\nimport { faEnvelope } from \"@fortawesome/free-regular-svg-icons/faEnvelope\";\n// See https://fontawesome.com/icons?d=gallery&s=brands,regular&m=free\n// to add other icons.\n\nconst data = [\n  {\n    link: \"https://github.com/dwhistle\",\n    label: \"Github\",\n    icon: faGithub,\n  },\n  {\n    link: \"https://www.linkedin.com/in/andrey-shibaev\",\n    label: \"LinkedIn\",\n    icon: faLinkedinIn,\n  },\n  {\n    link: \"mailto:andrw.shibaev@gmail.com\",\n    label: \"Email\",\n    icon: faEnvelope,\n  },\n];\n\nexport default data;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport data from \"../../data/contact\";\n\nconst ContactIcons = () => (\n  <ul className=\"icons\">\n    {data.map((s) => (\n      <li key={s.label}>\n        <a href={s.link}>\n          <FontAwesomeIcon icon={s.icon} />\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactIcons;\n"],"sourceRoot":""}